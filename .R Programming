# Installing required packages for Analysis.
install.packages("tidyverse")
install.packages("readr")
install.packages("rio")
install.packages("janitor")
install_formats()
install.packages("ggplot2")
install.packages("maps")


# Loading Library
library (tidyverse)
library (readr)
library (rio)
library(janitor)
library(ggplot2)
library(maps)
library(dlpyr)

# Dictionary Information Current Dictionary
getwd()

setwd() # Change Current Dictionary path

# Importing Dataset Via rio package import function()

 world_happiness_data <- import("2019.csv")
 
 View(world_happiness_data) # view Dataset 
 
# Summary of Dataset
 
 colnames(world_happiness_data)  # -> To know the Column Name
 
 glimpse(world_happiness_data) #Full summary of Dataset
 

# Now we want Clean our Dataset
 
 # I found column was upper case letters now we want convert into lower case. 
 # And also use clean name function
  
 world_happiness_data <- world_happiness_data %>%
           rename_with(tolower)
 
 View(world_happiness_data)  # Looking all Upper case name was Covert into lower case
 
 # Cleaning_Name Invaild or Unique name
 world_happiness_data <- world_happiness_data %>%
   clean_names()
 
 view(world_happiness_data) # completed Name cleaning,
 
 
 # Check the Columns Data type 
 
 str(world_happiness_data)

 # Looking all Cloumns was Right Data type no required to change data types.
                   
  #                                              **ANALYZING_DATA**

# Applying Sort function (Arrange) Dataset
 
top_gdp_country <- world_happiness_data %>%
  arrange(desc(gdp_per_capita)) %>%
  head(10)
 
head(top_gdp_country,10)

 # Applying Filter 

avg_gdp <- world_happiness_data %>%
  summarise(avg_gdp = mean(gdp_per_capita)) %>%  # Create Avg_gdp_per_capita
  pull(avg_gdp)

above_avg_gdp <- world_happiness_data %>% # filter data above avg_gdp
  filter(gdp_per_capita > avg_gdp) %>%
  arrange(desc(gdp_per_capita))

view(above_avg_gdp)

# Createing scatter plot  To find the Correlation between GDP & Score.

ggplot(data= world_happiness_data, mapping = aes( x= score,y= gdp_per_capita))+
  geom_point(colour = 'red',size=1)+
  geom_smooth(method = 'loess', formula = 'y ~ x')


ggplot(data= world_happiness_data, mapping = aes( x=score ,y= perceptions_of_corruption))+
  geom_point(colour = 'blue',size=1)+
  geom_smooth(method = 'loess', formula = 'y ~ x')

# Checking correlation between GDP per capita Vs freedom_to_make_life_choices
ggplot(data= world_happiness_data, mapping = aes(x= gdp_per_capita, y= healthy_life_expectancy))+
  geom_point(colour = 'black',size=1)+
geom_smooth(method = 'loess',formula ="y ~ x")

# Create World_map using (ggplot2) to Represent Country Score

maps_data <- map_data("world")

View(maps_data)

# Now we create map_data Data frame with lan &lat of Country.

world_maps_data <- left_join(world_happiness_data, maps_data, by = c("country_or_region" = "region"))

view(world_maps_data)
 # Created World map to visual based on country socre
ggplot()+
  geom_polygon(data = world_maps_data,aes(x=long ,y=lat,group = group,fill = score))+
geom_polygon(data = world_maps_data, aes(x=long, y=lat, group = group), fill = NA, color = "black",size=0.1)
